#==================================================#
#    script to render frame-dependent coloring     #
#     Alexey Titov and Lee-Ping Wang (05-2012)     #
#==================================================#

#==================================================#
#           Global settings for display            #
#==================================================#
axes location Off
display rendermode GLSL
display backgroundgradient on
display projection Orthographic
display depthcue off
display nearclip set 0.010000
material change opacity Ghost 0.000000

puts "Usage: Either launch VMD with 'vmd -e test.vmd -args my_xyz_file.xyz'"
puts "       or open VMD and run 'play my_xyz_file.xyz'"
# Load the new molecule
set xyzname [lindex $argv 0]
mol new $xyzname type xyz waitfor all
# Delete default rep
mol delrep 0 top
animate goto 0

proc vmd_draw_vector {mol cnt vec {scale 1.0} {res 35} {radius 0.05}} {

    set vecpt45 [vecscale [expr $scale *0.45] $vec]
    set vechalf [vecscale [expr $scale *0.5] $vec]
    set veczero [vecscale [expr $scale *0.0] $vec]
    set vecfull [vecscale [expr $scale *1.0] $vec]

    set cnt [vecsub $cnt $vecpt45]

    # Make sure arrowheads have a constant length.
    set hscale [expr -1.0*[min 0.0 [expr -1.0*[expr [veclength $vecfull] - 0.3]/[expr [veclength $vecfull]]]]]

    set radius [min [expr 0.1 * [veclength $vec]] $radius]
    return [list \
      [graphics $mol cylinder [vecsub $cnt $veczero] \
        [vecadd $cnt [vecscale $hscale $vecfull]] \
        radius $radius resolution $res filled yes] \
      [graphics $mol cone [vecadd $cnt [vecscale $hscale $vecfull]] \
        [vecadd $cnt $vecfull] radius [expr $radius * 2.5] \
        resolution $res]]
}

#==================================================#
#             define re-draw function              #
#==================================================#
proc do_coloring {args} {
    # coldata has the colors for all particles
    global coldata natoms molinit allatom bondata chgdata spndata
    set molid 0
    # get the current frame number
    set frame [molinfo $molid get frame]
    if {[info exists coldata($frame)]} then {
        set col [split [lindex $coldata($frame) 0] " "]
        #set bond [split [lindex $bondata($frame) 0] " "]
	set bond [lindex $bondata($frame)]
    
        if {$molinit == 0} then {
            set molinit 1
            for {set i 0} {$i < $natoms} {incr i} {
                mol representation VDW 0.5 53
                set beadcol [lindex $col $i]
                mol color ColorID $beadcol
                set mysel "index $i"
                mol selection $mysel
                set mat "Opaque"
                if {$beadcol == 8} {
                    set mat "Ghost"    
                } else {
                    set mat "Transparent"    
		}
                mol material $mat
                mol addrep top
            }
	    mol selection "all"
            mol material "Opaque"
	    mol color Name
	    mol rep VDW 0.150000 53.000000
	    mol addrep top
	    mol rep Bonds 0.05 53.0
	    mol addrep top
        } else {
            for {set i 0} {$i < $natoms} {incr i} {
                set beadcol [lindex $col $i]
                set oldcolor [lindex [lindex [molinfo top get "{color $i}"] 0] 1]
		# Only update the color if old and new are different (this speeds things up a lot)
		if {$beadcol != $oldcolor} {
                    mol modcolor $i $molid ColorID $beadcol
                    if {$beadcol == 8} {
                        set mat "Ghost"    
                    } else {
                        set mat "Transparent"    
		    }
                    mol modmaterial $i $molid $mat
                }
            }
        }
	$allatom setbonds [concat {*}$bond]
    }
    graphics top delete all
    graphics top color 32
    mol selection "all"
    mol material "Opaque"
    # Obtain a unit vector pointing in the +z direction from the user's perspective.
    set camz [lindex [lindex [molinfo top get view_matrix] 0] 1]
    lappend ez [ lindex $camz 0 ]
    lappend ez [ lindex $camz 1 ]
    lappend ez [ lindex $camz 2 ]
    set ez [ vecscale $ez [ expr 1.0 / [veclength $ez]]]
    # Draw the spin vectors.
    if {[info exists spndata($frame)]} then {
        set spn [split [lindex $spndata($frame) 0] " "]
        foreach {i s} $spn {
            set sel [atomselect top "index $i"]
            set x [$sel get x]
            set y [$sel get y]
            set z [$sel get z]
            vmd_draw_vector top [list $x $y $z] $ez $s 25 1.0
        }
    }
    # Draw the charge labels.
    if {[info exists chgdata($frame)]} then {
        set chg [split [lindex $chgdata($frame) 0] " "]
        foreach {i q} $chg {
            set sel [atomselect top "index $i"]
            set x [expr [$sel get x] + 0.3]
            set y [$sel get y]
            set z [$sel get z]
	    graphics top text [list $x $y $z] $q size 1 thickness 2
        }
    }
}

set allatom [atomselect top all]
set natoms [$allatom num]
set warns 0
#==================================================#
#           Read in the coloring data              #
#==================================================#
set filename "color.dat"
set fp [open $filename r]
set n [molinfo 0 get numframes]
set nn 0
for {set i 0} {$i < $n} {incr i} {
    set coldata_i [list [gets $fp]]
    set words [split $coldata_i " "]
    set numwords [llength $words]
    if {$numwords != $natoms} {
       set warns 1
    } else {
       set nn $i
       set coldata($i) $coldata_i
    }   
}
close $fp
set n $nn

#==================================================#
#             Read in the bond data                #
#==================================================#
set filename "bonds.dat"
set fp [open $filename r]
for {set i 0} {$i < $n} {incr i} {
    set bondata($i) [list [gets $fp]]
}
close $fp

#==================================================#
#            Read in the charge data               #
#==================================================#
set filename "charge.dat"
if {[file exists $filename]} {
    set fp [open $filename r]
    for {set i 0} {$i < $n} {incr i} {
        set chgdata($i) [list [gets $fp]]
    }
}
close $fp

#==================================================#
#             Read in the spin data                #
#==================================================#
set filename "spin.dat"
if {[file exists $filename]} {
    set fp [open $filename r]
    for {set i 0} {$i < $n} {incr i} {
        set spndata($i) [list [gets $fp]]
    }
}
close $fp

if { $warns == 1 } {
    puts [format "Warning: Only the first %i frames contain bond/color data!" [expr {$nn}]]
}

#check if the molecule has been initialized with reps
set molinit 0

# Note: To stop the tracing, type the same command but use "vdelete" instead of "variable"
trace variable vmd_logfile w do_coloring
# it was vmd_frame(0)

animate goto 0
